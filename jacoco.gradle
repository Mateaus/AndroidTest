apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.7"

    // Custom reports directory can be specified like this:
    // reportsDirectory = file("$buildDir/customJacocoReportDir")
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true

    // Required to handle issue found here https://github.com/gradle/gradle/issues/5184
    jacoco.excludes = ['jdk.internal.*']
}

project.afterEvaluate {

    // App modules only
    android.applicationVariants.all { variant ->
        def variantName = variant.name
        def testTaskName = "test${variantName.capitalize()}UnitTest"
        def testUiTaskName = "createDebugCoverageReport"

        tasks.create(name: "${testTaskName}Coverage", type: JacocoReport, dependsOn: ["$testTaskName", "$testUiTaskName"]) {
            group = "Reporting"
            description = "Generate Jacoco coverage reports for the ${variantName.capitalize()} build."

            reports {
                xml.enabled = true
                csv.enabled = false
                html.enabled = true
            }

            def excludes = [
                    '**/R.class',
                    '**/R$*.class',
                    '**/BuildConfig.*',
                    '**/Manifest*.*',
                    '**/*Test*.*',
                    '**/androidx/**/*.*',
                    '**/dagger/**/',
                    '**/*databinding/*.*',
                    '**/*Dagger*.*',
                    '**/*hilt*/*.*',
                    '**/*HiltComponents*.*',
                    '**/*Hilt*.*',
                    '**/di/*.*',
                    '**/*BR.*',
                    '**/*Bind*.*'
            ]

            def javaClasses = fileTree(
                    dir: variant.javaCompileProvider.get().destinationDir,
                    excludes: excludes
            )

            def kotlinClasses = fileTree(
                    dir: "${buildDir}/tmp/kotlin-classes/${variantName}",
                    excludes: excludes
            )

            classDirectories.setFrom(files([javaClasses, kotlinClasses]))

            sourceDirectories.setFrom(files([
                    "$project.projectDir/src/main/java",
                    "$project.projectDir/src/${variantName}/java",
                    "$project.projectDir/src/main/kotlin",
                    "$project.projectDir/src/${variantName}/kotlin"
            ]))

            executionData.setFrom(fileTree(dir: "$buildDir", includes: [
                    "jacoco/${testTaskName}.exec",
                    "outputs/code_coverage/debugAndroidTest/connected/*/*.ec"
            ]))
        }
    }
}